plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.protobuf' version '0.9.4'
    id 'application'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

ext {
    grpcVersion = '1.57.0'       // Latest stable gRPC version
    protobufVersion = '3.23.0'   // Compatible Protobuf version
    protocVersion = '3.23.0'     // Protoc compiler version
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    runtimeOnly 'org.postgresql:postgresql'

    // gRPC Spring Boot Starter
    implementation 'net.devh:grpc-spring-boot-starter:2.15.0.RELEASE'
    // gRPC dependencies
    implementation "io.grpc:grpc-netty:${grpcVersion}"      // For networking
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"   // For protobuf
    implementation "io.grpc:grpc-stub:${grpcVersion}"       // gRPC stubs
    implementation "io.grpc:grpc-services:${grpcVersion}"   // Reflection support

    // Protobuf
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"

    // Annotation processor for gRPC
    compileOnly "org.apache.tomcat:annotations-api:6.0.53"

    // Logging dependencies (optional)
    implementation 'ch.qos.logback:logback-classic:1.4.5'
    implementation 'org.slf4j:slf4j-api:2.0.5'

    // Test dependencies
    testImplementation "junit:junit:4.13.2"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc',
                    'build/generated/source/proto/main/java'
        }
    }
}

application {
    mainClass = 'com.example.grpcapi.GRpcApiApplication'
}

configurations.all {
    resolutionStrategy {
        // Force consistent gRPC and protobuf versions
        force "io.grpc:grpc-protobuf:${grpcVersion}"
        force "io.grpc:grpc-stub:${grpcVersion}"
        force "com.google.protobuf:protobuf-java:${protobufVersion}"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
}
